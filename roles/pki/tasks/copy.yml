- name: fetch ca certificate
  slurp:
    src: "{{pki_dir}}/certs/ca.crt"
  register:  "{{inventory_hostname}}_ca_cert"
  delegate_to: "{{pki_master}}"
  become: true

- name: fetch node key
  slurp:
    src: "{{pki_dir}}/keys/{{inventory_hostname}}.key"
  register: "{{inventory_hostname}}_node_key"
  delegate_to: "{{pki_master}}"
  become: true

- name: fetch node certificate
  slurp:
    src: "{{pki_dir}}/certs/{{inventory_hostname}}.crt"
  register: "{{inventory_hostname}}_node_cert"
  delegate_to: "{{pki_master}}"
  become: true

- name: fetch service accounts keyfile
  slurp:
    src: "{{pki_dir}}/keys/service_accounts.key"
  register: "{{inventory_hostname}}_service_accounts_key"
  delegate_to: "{{pki_master}}"
  when: "'kube_masters' in group_names"
  become: true

- name: create pki structure in destination
  file:
    name: "{{item}}"
    state: directory
    owner: "{{pki_dest_dir_owner}}"
    group: "{{pki_dest_dir_group}}"
  loop:
    - "{{pki_dest_dir}}"
    - "{{pki_dest_dir}}/keys"
    - "{{pki_dest_dir}}/certs"

- name: push pki data
  copy:
    content: "{{vars[item.name]['content'] | b64decode}}"
    dest: "{{pki_dest_dir}}/{{item.dest}}"
    owner: "{{pki_dest_dir_owner}}"
    group: "{{pki_dest_dir_group}}"
  loop:
    - name: "{{inventory_hostname}}_ca_cert"
      dest: certs/ca.crt
    - name: "{{inventory_hostname}}_node_key"
      dest: "keys/{{inventory_hostname}}.key"
    - name: "{{inventory_hostname}}_node_cert"
      dest: "certs/{{inventory_hostname}}.crt"

- name: push service accounts keyfile
  copy:
    content: "{{vars[inventory_hostname + '_service_accounts_key'].content | b64decode}}"
    dest: "{{pki_dest_dir}}/keys/service_accounts.key"
    owner: "{{pki_dest_dir_owner}}"
    group: "{{pki_dest_dir_group}}"
    mode: 0640
  when: "'kube_masters' in group_names"

- name: protect private key
  file:
    path: "{{pki_dest_dir}}/keys/{{inventory_hostname}}.key"
    mode: 0640
