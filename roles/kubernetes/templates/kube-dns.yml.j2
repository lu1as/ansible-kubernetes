apiVersion: v1
kind: Service
metadata:
  name: kube-dns
  namespace: kube-system
  labels:
    k8s-app: kube-dns
spec:
  clusterIP: {{kube_internal_dns_servers[0]}}
  selector:
    k8s-app: kube-dns
  ports:
    - name: dns
      port: 53
      protocol: UDP
    - name: dns-tcp
      port: 53
      protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-dns
  namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-dns
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kube-dns
  template:
    metadata:
      labels:
        k8s-app: kube-dns
        kubernetes.io/cluster-service: "true"
        kubernetes.io/name: kube-dns
    spec:
      dnsPolicy: Default
      serviceAccountName: kube-dns
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: kubedns
          image: k8s.gcr.io/k8s-dns-kube-dns-amd64:{{kube_dns_version}}
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          livenessProbe:
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 5
          args:
            - --domain={{kube_internal_domain}}.
            - --dns-port=10053
            - --config-dir=/kube-dns-config
            - --v=2
          env:
            - name: PROMETHEUS_PORT
              value: "10055"
          ports:
            - containerPort: 10053
              name: dns-local
              protocol: UDP
            - containerPort: 10053
              name: dns-tcp-local
              protocol: TCP
            - containerPort: 10055
              name: metrics
              protocol: TCP
          volumeMounts:
            - name: kube-dns-config
              mountPath: /kube-dns-config
        - name: dnsmasq
          image: k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:{{kube_dns_version}}
          livenessProbe:
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          args:
            - -v=2
            - -logtostderr
            - -configDir=/etc/k8s/dns/dnsmasq-nanny
            - -restartDnsmasq=true
            - --
            - -k
            - --cache-size=1000
            - --no-negcache
            - --log-facility=-
            - --server=/{{kube_internal_domain}}/127.0.0.1#10053
            - --server=/in-addr.arpa/127.0.0.1#10053
            - --server=/ip6.arpa/127.0.0.1#10053
          ports:
            - containerPort: 53
              name: dns
              protocol: UDP
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          volumeMounts:
            - name: kube-dns-config
              mountPath: /etc/k8s/dns/dnsmasq-nanny
        - name: sidecar
          image: k8s.gcr.io/k8s-dns-sidecar-amd64:{{kube_dns_version}}
          livenessProbe:
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          args:
            - --v=2
            - --logtostderr
            - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.{{kube_internal_domain}},5,SRV
            - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.{{kube_internal_domain}},5,SRV
          ports:
            - containerPort: 10054
              name: metrics
              protocol: TCP
          resources:
            requests:
              memory: 20Mi
              cpu: 10m
      volumes:
        - name: kube-dns-config
          configMap:
            name: kube-dns
            optional: true
