# install
# use seperated role for summerized installation of atomic packages
# - include_tasks: install_atomic.yml
#   when: ansible_pkg_mgr == 'atomic_container'

- include_tasks: install_debian.yml
  when: ansible_os_family == 'Debian'

# pki
- name: copy pki
  include_role:
    name: pki
  vars:
    pki_dest_dir: "{{kube_pki_dir}}"
    pki_dest_dir_owner: root
    pki_dest_dir_group: kube

# main config
- name: copy main config
  template:
    src: config.j2
    dest: "{{kube_config_folder}}/config"
  notify: 
    - restart kubelet
    - restart kube-apiserver
- name: copy kube config
  template:
    src: kubeconfig.j2
    dest: "{{kube_config_folder}}/kubeconfig"
  notify: 
    - restart kubelet
    - restart kube-apiserver

# master only block
- block:
  # apiserver
  - name: copy apiserver config
    template:
      src: apiserver.j2
      dest: "{{kube_config_folder}}/apiserver"
    notify: restart kube-apiserver

  # controller-manager
  - name: copy controller-manager config
    template:
      src: controller-manager.j2
      dest: "{{kube_config_folder}}/controller-manager"
    notify: restart kube-controller-manager

  - name: enable kubernetes master components
    systemd:
      name: "{{item}}"
      enabled: true
    loop:
      - kube-apiserver
      - kube-scheduler
      - kube-controller-manager

  when: "'kube_masters' in group_names"

# minions only block
- block:
  # kubelet
  - name: copy kubelet config
    template:
      src: kubelet.j2
      dest: "{{kube_config_folder}}/kubelet"
    notify: restart kubelet

  - name: copy kubelet.yml config
    template:
      src: kubelet.yml.j2
      dest: "{{kube_config_folder}}/kubelet.yml"
    notify: restart kubelet

  # proxy
  - name: copy proxy config
    template:
      src: proxy.j2
      dest: "{{kube_config_folder}}/proxy"
    notify: restart kube-proxy

  - name: enable kubernetes node components
    systemd:
      name: "{{item}}"
      enabled: true
    loop:
      - kubelet
      - kube-proxy

  when: "'kube_minions' in group_names"

- name: create kube-dns resource (local)
  template:
    src: bootstrap/kube-dns.yml.j2
    dest: kube-dns.yml
  delegate_to: localhost
  become: false
  when: inventory_hostname == hostvars[groups['kube_masters'][0]].inventory_hostname

- name: create kubernetes-dashboard resource (local)
  template:
    src: bootstrap/kubernetes-dashboard.yml.j2
    dest: kubernetes-dashboard.yml
  delegate_to: localhost
  become: false
  when: inventory_hostname == hostvars[groups['kube_masters'][0]].inventory_hostname

- meta: flush_handlers

- name: bootstrap rbac
  include_tasks: rbac.yml
  when: kube_rbac and 
        (inventory_hostname == hostvars[groups['kube_masters'][0]].inventory_hostname)
