# install
# atomic packages are installed by basic role

- include_tasks: install_debian.yml
  when: ansible_os_family == 'Debian'

# pki
- name: copy pki
  include_role:
    name: pki
  vars:
    pki_dest_dir: "{{kube_pki_dir}}"
    pki_dest_dir_owner: root
    pki_dest_dir_group: kube

# main config
- name: copy main config
  template:
    src: config.j2
    dest: "{{kube_config_folder}}/config"
  notify: 
    - restart kubelet
    - restart kube-apiserver
- name: copy kube config
  template:
    src: kubeconfig.j2
    dest: "{{kube_config_folder}}/kubeconfig"
  notify: 
    - restart kubelet
    - restart kube-apiserver

# master config
- name: configure master
  include_tasks: master.yml
  when: "'kube_masters' in group_names"

# minion config
- name: configure minion
  include_tasks: minion.yml
  when: "'kube_minions' in group_names"

# kube-dns and kubernetes-dashboard
- name: create kube-dns resource (local)
  template:
    src: bootstrap/kube-dns.yml.j2
    dest: kube-dns.yml
  delegate_to: localhost
  become: false
  when: inventory_hostname == hostvars[groups['kube_masters'][0]].inventory_hostname

- name: create kubernetes-dashboard resource (local)
  template:
    src: bootstrap/kubernetes-dashboard.yml.j2
    dest: kubernetes-dashboard.yml
  delegate_to: localhost
  become: false
  when: inventory_hostname == hostvars[groups['kube_masters'][0]].inventory_hostname

- meta: flush_handlers

# rbac bootstrap
- name: bootstrap rbac
  include_tasks: rbac.yml
  when: kube_rbac and 
        (inventory_hostname == hostvars[groups['kube_masters'][0]].inventory_hostname)
